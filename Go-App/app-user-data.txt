Content-Type: multipart/mixed; boundary="==BOUNDARY=="
MIME-Version: 1.0

--==BOUNDARY==
MIME-Version: 1.0
Content-Type: text/text/x-shellscript; charset="us-ascii"
#!/bin/bash
# Install awslogs and the jq JSON parser
yum update -y
yum install -y awslogs jq

# Inject the CloudWatch Logs configuration file contents
cat > /etc/awslogs/awslogs.conf <<- EOF
[general]
state_file = /var/lib/awslogs/agent-state        
 
[/var/log/dmesg]
file = /var/log/dmesg
log_group_name = /var/log/dmesg
log_stream_name = {instance_id}-dmesg

[/var/log/messages]
file = /var/log/messages
log_group_name = /var/log/messages
log_stream_name = {instance_id}-messages
datetime_format = %b %d %H:%M:%S

[/app.log]
file = /home/go-user/GoTest.log
log_group_name = /app.log
log_stream_name = {instance_id}-app.log
datetime_format = %Y-%m-%dT%H:%M:%SZ

EOF

# Set the region to send CloudWatch Logs data to (the region where the container instance is located)
region=$(curl 169.254.169.254/latest/meta-data/placement/availability-zone | sed s'/.$//')
sed -i -e "s/region = us-east-1/region = $region/g" /etc/awslogs/awscli.conf

# Grab the instance id from instance metadata
  instance_id=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
	
# Replace the instance ID placeholder with the actual values
  sed -i -e "s/{instance_id}/$instance_id/" /etc/awslogs/awslogs.conf

# Start the awslogs service
 service awslogs start
 chkconfig awslogs on

# Enable security updates to run every midnight
echo "00 00 * * * yum update -y" > /tmp/cronfile
crontab /tmp/cronfile

# Get the app from github and run it as isolated user go-user
useradd -b /home -U go-user
curl https://raw.githubusercontent.com/julian-berks/Capgemini-Code/master/GoTest > /home/go-user/GoTest
chown go-user:go-user /home/go-user/GoTest
chmod 700 /home/go-user/GoTest
su - go-user -c "cd /home/go-user;nohup ./GoTest > ./GoTest.log 2>&1 &"

--==BOUNDARY==
